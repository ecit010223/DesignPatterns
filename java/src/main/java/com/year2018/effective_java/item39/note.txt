必要时进行保护性拷贝
参数的保护性拷贝并不仅仅针对不可变类，每当编写方法或者构造器时，如果它要允许客户提供的对象进行到内部数据
结构中，则有必要考虑一下，客户提供的对象是否有可能是可变的，如果是，就要考虑你的类是否能够容忍对象进行数
据结构之后发生变化，如果答案是否定的，就必须对该对象进行保护性拷贝，并且让拷贝之后的对象，而不是原始对象
进入到数据结构中。
在内部组件被返回给客户端之前，对它们进行保护性拷贝也是同样的道理，不管类是否为可变的，在把一个指向内部可
变组件的引用返回给客户端之前，也应该加倍认真地考虑。解决方案是，应该返回保护性拷贝，记住长度非零的数组总
是可变的，因此，在把内部数组返回给客户端之前，应该总要进行保护性拷贝，给客户端返回该数组的不可变视图。
总之，如果类具有从客户端得到或者返回到客户端的可变组件，类就必须保护性地拷贝这些组件，如果拷贝的成本受到
限制，并且类信任它的客户端不会不恰当地修改组件，就可以在文档中指明客户端的职责是不得修改受到影响的组件，
以此来代替保护性拷贝。


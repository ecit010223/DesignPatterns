列表优先于数组
数组与泛型的不同点1：数组是协变的，表示如果Sub为Super的子类型，那么数组类型Sub[]就
是Super[]的子类型。相反，泛型则是不可变的：对于任意两个不同的类型Type1和Type2，List<Type1>即不是
List<Type2>的子类型，也不是List<Type2>的超类型。
数据与泛型的不同点2：数组是具体化的，因此数组会在运行时才知道并检查它们的元素类型约束，相比之下，泛型则是
通过擦除来实现的，因此泛型只在编译时强化它们的类型信息，并在运行时丢弃（或者擦除）它们的元素类型信息。擦
除就是使泛型可以与没有使用泛型的代码随意进行互用。
由于上述区别，因此数组和泛型不能很好地混合使用。例如，创建泛型、参数化类型或者类型参数的数组是非法的，这些
数组创建表达式没有一个是合法的：new List<E>[], new List<String>[]和new E[]，在编译时都会导致一个generic
array creation（泛型数组创建）错误。
从技术的角度来说，像E、List<E>和List<String>这样的类型应称作不可具体化的类型。直观地说，不可具体化的类型
是指其运行时表示法包含的信息比它的编译时表示法包含的信息更少的类型。唯一可具体化的参数化类型是无限制的通
配符类型，如List<?>和Map<?,?>，虽然不常用，但是创建无限制通配类型的数组是合法的。

item01.考虑用静态工厂方法代替构造器
item02.遇到多个构造器参数时要考虑构建器
item03.用私有构造器或者枚举类型强化Singleton属性
item04.通过私有构造器强化不可实例化的能力
item05.避免创建不必要的对象
item06.消除过期的对象引用
item07.避免使用终结方法
item08.覆盖equals时请遵守通用约定
item09.覆盖equals时总要覆盖hashCode
item10.始终要覆盖toString
item11.谨慎地覆盖clone
item12.考虑实现Comparable接口
item13.使类和成员的可访问性最小化
item14.在公有类中使用访问方法而非公有域
item15.使可变性最小化
item16.复合优先于继承
item17.要么为继承而设计，并提供文档说明，要么就禁止继承
item18.接口优于抽象类
item19.接口只用于定义类型
item20.类层次优于标签类
item21.用函数对象表示策略
item22.优先考虑静态成员类
item23.请不要在新代码中使用原生态类型
item24.消除非受检警告
item25.列表优先数组
item26.优先考虑泛型
item27.优先考虑泛型方法
item28.利用有限制通配符来提升API的灵活性
item29.优先考虑类型安全的异构容器
item30.用enum代替int常量
item31.用实例域代替序数
item32.用EnumSet代替位域
item33.用EnumMap代替序数索引
item34.用接口模拟可伸缩的枚举
item35.注解优先于命名模式
item36.坚持使用Override注解
item37.用标记接口定义类型
item38.检查参数的有效性
item39.必要时进行保护性拷贝
item40.谨慎设计方法签名
item41.慎用重载
item42.慎用可变参数
item43.返回零长度的数组或者集合，而不是null
item44.为所有导出的API元素编写文档注释
item45.将局部变量的作用域最小化
item46.for-each循环优先于传统的for循环
item47.了解和使用类库
item48.如果需要精确的答案，请避免使用float和double
item49.基本类型优先于装箱基本类型
item50.如果其它类型更适合，同尽量避免使用字符串
item51.当心字符串连接的性能
item52.通过接口引用对象
item53.接口优先于反射机制
item54.谨慎地使用本地方法
item55.谨慎地进行优化
item56.遵守普遍接受的命名惯例
item57.只针对异常的情况才使用异常
item58.对可恢复的情况使用受检异常，对编程错误使用运行时异常
item59.避免不必要地使用受检的异常
item60.优先使用标准的异常
item61.抛出与抽象相对应的异常
item62.每个方法抛出的异常都要有文档
item63.在细节消息中包含能捕获失败的信息
item64.努力使失败保持原子性
item65.不要忽略异常
item66.同步访共享的可变数据
item67.避免过度同步
item68.executor和task优先于线程
item69.并发工具优先于wait和notify
item70.线程安全性的文档化
item71.慎用延迟初始化
item72.不要依赖于线程调度器
item73.避免使用线程组
item74.谨慎地实现Serializable接口
item75.考虑使用自定义的序列化形式
item76.保护性编写readObject方法
item77.对于实例控制、枚举类型优先于readResolve
item78.考虑用序列化代理代替序列化实例